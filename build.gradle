plugins {
    id 'idea'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'com.palantir.git-version' version '3.1.0'
    id 'maven-publish'
    id 'java-gradle-plugin'
}

project.version = gitVersion()
project.group = 'com.jetbrains.python'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

publishing {
    repositories {
        maven {
            url uri('../mvn_repo')
        }
    }
}

dependencies {
    implementation gradleApi()

    testImplementation(
            gradleTestKit(),
    )

    testImplementation(platform('org.junit:junit-bom:5.10.3'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    testImplementation('org.spockframework:spock-core:2.4-M4-groovy-3.0') {
        exclude module: 'groovy-all'
    }
}

gradlePlugin {
    website = 'https://github.com/JetBrains/gradle-python-envs'
    vcsUrl = 'https://github.com/JetBrains/gradle-python-envs'
    plugins {
        pythonEnvsPlugin {
            id = 'com.jetbrains.python.envs'
            implementationClass = 'com.jetbrains.python.envs.PythonEnvsPlugin'
            displayName = 'Gradle Python Envs plugin'
            description = 'Gradle plugin to install different Python environments'
            tags.set(['python', 'miniconda', 'conda'])
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        showCauses = true
        showExceptions = true
        showStackTraces = true
        showStandardStreams = true

        events "started", "passed", "skipped", "failed", "standard_out", "standard_error"
    }
}
